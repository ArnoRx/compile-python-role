---
# tasks file for ansible-role-python

- name: Include dependencies
  include_vars: "main.yml"

- name: Check if Python is present with the right version
  command: "{{ python_path }}/bin/python{{ python_version[:3] }} --version"
  register: command_result
  ignore_errors: yes
  changed_when: false
  failed_when: false

- name: Update apt cache
  apt:
    update_cache: yes
  changed_when: false
  when:
    - ansible_os_family == "Debian"
    - command_result.rc > 0

- name: Install Python dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ package_requirements }}"
  when: command_result.rc > 0

- name: Download and unpacking Python tarball
  unarchive:
    src: "{{ python_tarball_url }}"
    dest: /tmp
    mode: 0755
    remote_src: yes
  when: command_result.rc > 0

- name: Configure Python source
  shell: |
    ./configure {{ enable_optimizations | ternary('--enable-optimizations --with-lto','') }} \
    --with-system-ffi \
    --with-ensurepip={{ ensure_pip }} \
    --prefix={{ python_path }}
  args:
    chdir: "/tmp/Python-{{ python_version }}"
  when: command_result.rc > 0

- name: Compile and install Python
  shell: "make PROFILE_TASK='-m test.regrtest --pgo -j{{ make_num_threads }}' -j{{ make_num_threads }} && make altinstall"
  args:
    chdir: "/tmp/Python-{{ python_version }}"
  when: command_result.rc > 0

- name: Clean dependency use for python compilation
  package:
    name: "{{ item }}"
    state: absent
  with_items: "{{ package_requirements }}"
  when: clean_package_requirements
